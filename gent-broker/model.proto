syntax = "proto3";

message Worker {
  string type = 1;
  string version = 2;
}

message ProcessInput {
  string type = 1;
  string version = 2;
  string caller = 3;
  string input = 4;
}

message ProcessError {
  string name = 1;
  string message = 2;
  string stack = 3;
}

message Process {
  string id = 1;
  uint64 created = 2;
  string type = 3;
  string version = 4;
  string status = 5;
  string current_task = 6;
  string current_subtask = 7;
  string current_state = 8;
  string current_input = 9;
  uint64 next_deploy_time = 10;
  string next_task = 11;
  string next_subtask = 12;
  string state = 13;
  string input = 14;
  string output = 15;
  ProcessError error = 16;
  repeated string tags = 17;
  bool active = 18;
}

message WorkerIn {
  oneof data {
    Worker register_worker = 1;
    Process create_process = 2;
    Process step_result = 3;
  }
}

message WorkerOut {
  oneof data {
    ProcessInput validate_input = 1;
    Process make_step = 2;
  }
}

service Broker {
  rpc worker(stream WorkerIn) returns (stream WorkerOut);
  rpc create_process(Process) returns (Process);
  rpc step_result(Process) returns (Process);
}